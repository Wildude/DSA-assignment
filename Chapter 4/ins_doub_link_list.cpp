// insertion of doubly linked lists
#include "structNode.hpp"
int main(){
    Dnode* head = new Dnode({"head_node", NULL, NULL});
    Dnode* temp = new Dnode({"new_head", NULL, NULL});
    Dnode* temp2 = new Dnode({"third_head", NULL, NULL});
    Dnode* temp4 = new Dnode({"fifth_node", NULL, NULL});
    Dnode* temp3 = new Dnode({"fourth_node", NULL, temp4});
    Dnode* empty = NULL;
    // description
    cout << " insertion operation for a doubly linked list:\n";
    cout << " insertion is done before the index/location\n";
    cout << " to insert after index/location use index value as index + 1\n";
    cout << " ========================================\n";
    cout << " head:\n";
    Display(head);
    cout << " ========================================\n";
    cout << " temp:\n";
    Display(temp);
    cout << " ========================================\n";
    cout << " temp2:\n";
    Display(temp2);
    cout << " ========================================\n";
    cout << " temp3:\n";
    Display(temp3);
    cout << " ========================================\n";
    cout << " temp4:\n";
    Display(temp4);
    cout << " ========================================\n";
    cout << " empty:\n";
    Display(empty);
    insertDnode(empty, head);
    cout << " after insertion 1 (head on empty (empty node))\n";
    cout << " ========================================\n";
    cout << " head:\n";
    Display(head);
    cout << " ========================================\n";
    cout << " temp:\n";
    Display(temp);
    cout << " ========================================\n";
    cout << " temp2:\n";
    Display(temp2);
    cout << " ========================================\n";
    cout << " temp3:\n";
    Display(temp3);
    cout << " ========================================\n";
    cout << " temp4:\n";
    Display(temp4);
    cout << " ========================================\n";
    cout << " empty:\n";
    Display(empty);
    insertDnode(empty, temp);
    cout << " after insertion 2 (temp on head of empty (one node))\n";
    cout << " ========================================\n";
    cout << " head:\n";
    Display(head);
    cout << " ========================================\n";
    cout << " temp:\n";
    Display(temp);
    cout << " ========================================\n";
    cout << " temp2:\n";
    Display(temp2);
    cout << " ========================================\n";
    cout << " temp3:\n";
    Display(temp3);
    cout << " ========================================\n";
    cout << " temp4:\n";
    Display(temp4);
    cout << " ========================================\n";
    cout << " empty:\n";
    Display(empty);
    insertDnode(empty, temp2, 1);
    cout << " after insertion 3 (temp2 on 1th node of empty (two nodes))\n";
    cout << " ========================================\n";
    cout << " head:\n";
    Display(head);
    cout << " ========================================\n";
    cout << " temp:\n";
    Display(temp);
    cout << " ========================================\n";
    cout << " temp2:\n";
    Display(temp2);
    cout << " ========================================\n";
    cout << " temp3:\n";
    Display(temp3);
    cout << " ========================================\n";
    cout << " temp4:\n";
    Display(temp4);
    cout << " ========================================\n";
    cout << " empty:\n";
    Display(empty);
    insertDnode(empty, temp3, 3);
    cout << " after insertion 4 (temp3 on tail of empty (three nodes))\n";
    cout << " ========================================\n";
    cout << " head:\n";
    Display(head);
    cout << " ========================================\n";
    cout << " temp:\n";
    Display(temp);
    cout << " ========================================\n";
    cout << " temp2:\n";
    Display(temp2);
    cout << " ========================================\n";
    cout << " temp3:\n";
    Display(temp3);
    cout << " ========================================\n";
    cout << " temp4:\n";
    Display(temp4);
    cout << " ========================================\n";
    cout << " empty:\n";
    Display(empty);
    insertDnode(empty, temp4, 3);
    cout << " after insertion 5 (temp4 on 3th node of empty (four nodes))\n";
    cout << " ========================================\n";
    cout << " head:\n";
    Display(head);
    cout << " ========================================\n";
    cout << " temp:\n";
    Display(temp);
    cout << " ========================================\n";
    cout << " temp2:\n";
    Display(temp2);
    cout << " ========================================\n";
    cout << " temp3:\n";
    Display(temp3);
    cout << " ========================================\n";
    cout << " temp4:\n";
    Display(temp4);
    cout << " ========================================\n";
    cout << " empty:\n";
    Display(empty);
    return 0;
}